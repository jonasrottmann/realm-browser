apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'realm-android'

group = 'de.jonasrottmann.realm-browser'

android {
    compileSdkVersion 23
    buildToolsVersion project.buildToolsVersion
    resourcePrefix 'realm_browser_'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        versionCode project.gitCommitCount
        versionName project.gitTag
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:$project.supportLibVersion"
    compile "com.android.support:recyclerview-v7:$project.supportLibVersion"
    compile "com.android.support:design:$project.supportLibVersion"
    compile "com.android.support:support-annotations:$project.supportLibVersion"
    compile 'com.jakewharton.timber:timber:4.1.2'
    testCompile "junit:junit:4.12"
    androidTestCompile "junit:junit:4.12"
    androidTestCompile "com.android.support:support-annotations:$project.supportLibVersion"
    androidTestCompile "com.android.support.test:runner:0.4.1"
    androidTestCompile "com.android.support.test:rules:0.4.1"
    androidTestApt "io.realm:realm-annotations:$project.realmVersion"
    androidTestApt "io.realm:realm-annotations-processor:$project.realmVersion"
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}